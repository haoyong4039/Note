=========================================文件名处理========================================
String originalFilename = file.getOriginalFilename();
String preName = originalFilename.substring(0,originalFilename.lastIndexOf("."));
String suffixName = originalFilename.substring(originalFilename.lastIndexOf("."));

Random random = new Random();
Integer number = random.nextInt(900000) + 100000;//随机六位数
String fileName = preName + "-" + System.currentTimeMillis() + String.valueOf(number) + suffixName;

===========================================上传==========================================
        try
        {
            File dest = new File(path);
            // 检测是否存在目录
            if (!dest.getParentFile().exists())
            {
                dest.getParentFile().mkdirs();// 新建文件夹
            }
            file.transferTo(dest);// 文件写入

            File fileCurrent = new File(path);
            //判断是否上传成功
            if (fileCurrent.exists())
            {
                return true;
            }
        }
        catch (IllegalStateException e)
        {
            e.printStackTrace();
        }
        catch (IOException e)
        {
            e.printStackTrace();
        }

===========================================下载=========================================
        try
        {
            //得到要下载的文件
            File file = new File(SOURCE_SAVE_DIR + fileName);
            //如果文件不存在
            if (!file.exists())
            {
                throw new CcpException(CssEnum.ERROR_FILE_NOT_EXIST);
            }
            // 设置强制下载不打开
            response.setContentType("application/force-download");
            // 设置文件名
            response.addHeader("Content-Disposition", "attachment;fileName=" + URLEncoder.encode(fileName, "UTF-8"));
            //读取要下载的文件，保存到文件输入流
            FileInputStream in = new FileInputStream(SOURCE_SAVE_DIR + fileName);
            //创建输出流
            OutputStream out = response.getOutputStream();
            //创建缓冲区
            byte buffer[] = new byte[1024];
            int len = 0;
            //循环将输入流中的内容读取到缓冲区当中
            while ((len = in.read(buffer)) > 0)
            {
                //输出缓冲区的内容到浏览器，实现文件下载
                out.write(buffer, 0, len);
            }
            //关闭文件输入流
            in.close();
            //关闭输出流
            out.close();
        }
        catch (CcpException e)
        {
            throw e;
        }
        catch (IOException e)
        {
            throw new CcpException(CssCodeEnum.ERROR_CSS_INTERNAL, e);
        }

========================================curl操作==========================================
        try
        {
            String[] cmd = new String[] {"curl", "-F", "filename=@"+PIC_SAVE_DIR+fileName+";type=application/octet-stream", "-F", "token="+PIC_UPLOAD_TOKEN, "-F", "reName=false", PIC_UPLOAD_URL};

            ProcessBuilder pb = new ProcessBuilder(cmd);

            logger.info("cmd:{}", pb.command());

            pb.redirectErrorStream(true);

            Process p = pb.start();
            BufferedReader br = new BufferedReader(new InputStreamReader(p.getInputStream()));

            String line = null;
            while ((line = br.readLine()) != null)
            {
                System.out.println("\t" + line);
            }

            br.close();
        }
        catch (Exception e)
        {
            throw new CcpException(CssCodeEnum.ERROR_CSS_INTERNAL,e);
        }